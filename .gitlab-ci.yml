stages:
  - Lint
  - Test
  - Build
  - Deploy

.frontendJob:
  image: node:20.2.0-alpine3.18
  rules:
    - if: '$SCHEDULED == "true"'
      when: never
    - if: "$CI_COMMIT_REF_NAME == 'main'"
    - if: '$CI_COMMIT_REF_NAME == "development"'
    - if: '($CI_MERGE_REQUEST_TITLE != null)'
      when: never
    - if: '$CI_MERGE_REQUEST_DRAFT == "false"'
    - exists:
        - "$CI_MERGE_REQUEST_TARGET_BRANCH_NAME"
    - changes:
        - "./*"
    - changes:
        - ".gitlab-ci.yml"

######## Frontend Pipeline
"Frontend-Lint":
  stage: Lint
  script:
    - npm ci
    - npm run lint:no-fix
  extends:
    - .frontendJob

"Frontend-Test":
  stage: Test
  script:
    - npm ci
    - npm run test:pipeline
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage/cobertura-coverage.xml
  extends:
    - .frontendJob

"Frontend-Build":
  stage: Build
  script:
    - npm ci
    - npm run build
  extends:
    - .frontendJob

"Image-Build":
  stage: Build
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  script:
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG
  rules:
    - if: '$CI_COMMIT_BRANCH != "main"'
      when: never
    - if: '$CI_COMMIT_BRANCH != "development"'
      when: never
    - if: '$CI_COMMIT_BRANCH != "00-test-runner-and-pipeline"'
      when: never

"Frontend-Deployment":
  stage: Deploy
  script:
    - npm ci
  extends:
    - .frontendJob
